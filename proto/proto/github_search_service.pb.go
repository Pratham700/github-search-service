// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/github_search_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SearchTerm    string                 `protobuf:"bytes,1,opt,name=search_term,json=searchTerm,proto3" json:"search_term,omitempty"`
	User          string                 `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_proto_github_search_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_github_search_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_github_search_service_proto_rawDescGZIP(), []int{0}
}

func (x *SearchRequest) GetSearchTerm() string {
	if x != nil {
		return x.SearchTerm
	}
	return ""
}

func (x *SearchRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type SearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*Result              `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	mi := &file_proto_github_search_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_github_search_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_proto_github_search_service_proto_rawDescGZIP(), []int{1}
}

func (x *SearchResponse) GetResults() []*Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileUrl       string                 `protobuf:"bytes,1,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	Repo          string                 `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_proto_github_search_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_proto_github_search_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_proto_github_search_service_proto_rawDescGZIP(), []int{2}
}

func (x *Result) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *Result) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

var File_proto_github_search_service_proto protoreflect.FileDescriptor

const file_proto_github_search_service_proto_rawDesc = "" +
	"\n" +
	"!proto/github_search_service.proto\x12\x13githubsearchservice\"D\n" +
	"\rSearchRequest\x12\x1f\n" +
	"\vsearch_term\x18\x01 \x01(\tR\n" +
	"searchTerm\x12\x12\n" +
	"\x04user\x18\x02 \x01(\tR\x04user\"G\n" +
	"\x0eSearchResponse\x125\n" +
	"\aresults\x18\x01 \x03(\v2\x1b.githubsearchservice.ResultR\aresults\"7\n" +
	"\x06Result\x12\x19\n" +
	"\bfile_url\x18\x01 \x01(\tR\afileUrl\x12\x12\n" +
	"\x04repo\x18\x02 \x01(\tR\x04repo2h\n" +
	"\x13GithubSearchService\x12Q\n" +
	"\x06Search\x12\".githubsearchservice.SearchRequest\x1a#.githubsearchservice.SearchResponseB3Z1github.com/Pratham700/github-search-service/protob\x06proto3"

var (
	file_proto_github_search_service_proto_rawDescOnce sync.Once
	file_proto_github_search_service_proto_rawDescData []byte
)

func file_proto_github_search_service_proto_rawDescGZIP() []byte {
	file_proto_github_search_service_proto_rawDescOnce.Do(func() {
		file_proto_github_search_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_github_search_service_proto_rawDesc), len(file_proto_github_search_service_proto_rawDesc)))
	})
	return file_proto_github_search_service_proto_rawDescData
}

var file_proto_github_search_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_github_search_service_proto_goTypes = []any{
	(*SearchRequest)(nil),  // 0: githubsearchservice.SearchRequest
	(*SearchResponse)(nil), // 1: githubsearchservice.SearchResponse
	(*Result)(nil),         // 2: githubsearchservice.Result
}
var file_proto_github_search_service_proto_depIdxs = []int32{
	2, // 0: githubsearchservice.SearchResponse.results:type_name -> githubsearchservice.Result
	0, // 1: githubsearchservice.GithubSearchService.Search:input_type -> githubsearchservice.SearchRequest
	1, // 2: githubsearchservice.GithubSearchService.Search:output_type -> githubsearchservice.SearchResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_github_search_service_proto_init() }
func file_proto_github_search_service_proto_init() {
	if File_proto_github_search_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_github_search_service_proto_rawDesc), len(file_proto_github_search_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_github_search_service_proto_goTypes,
		DependencyIndexes: file_proto_github_search_service_proto_depIdxs,
		MessageInfos:      file_proto_github_search_service_proto_msgTypes,
	}.Build()
	File_proto_github_search_service_proto = out.File
	file_proto_github_search_service_proto_goTypes = nil
	file_proto_github_search_service_proto_depIdxs = nil
}
